{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction NewsLoginComponent_div_7_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Email is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NewsLoginComponent_div_7_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Invalid email format.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NewsLoginComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, NewsLoginComponent_div_7_small_1_Template, 2, 0, \"small\", 4);\n    i0.ɵɵtemplate(2, NewsLoginComponent_div_7_small_2_Template, 2, 0, \"small\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.loginForm == null ? null : (tmp_0_0 = ctx_r0.loginForm.get(\"email\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.loginForm == null ? null : (tmp_1_0 = ctx_r0.loginForm.get(\"email\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"email\"]);\n  }\n}\nfunction NewsLoginComponent_div_11_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Password is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NewsLoginComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, NewsLoginComponent_div_11_small_1_Template, 2, 0, \"small\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.loginForm == null ? null : (tmp_0_0 = ctx_r1.loginForm.get(\"password\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nexport class NewsLoginComponent {\n  constructor(fb, authService, router) {\n    this.fb = fb;\n    this.authService = authService;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n  onLogin() {\n    if (this.loginForm.valid) {\n      this.authService.login(this.loginForm.value).subscribe(() => {\n        this.router.navigate(['/news']);\n      }, error => {\n        console.error('Login failed:', error);\n      });\n    }\n  }\n  static {\n    this.ɵfac = function NewsLoginComponent_Factory(t) {\n      return new (t || NewsLoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: NewsLoginComponent,\n      selectors: [[\"app-news-login\"]],\n      decls: 14,\n      vars: 4,\n      consts: [[1, \"container\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"email\"], [\"id\", \"email\", \"formControlName\", \"email\", \"type\", \"email\", \"required\", \"\", \"autocomplete\", \"email\"], [4, \"ngIf\"], [\"for\", \"password\"], [\"id\", \"password\", \"formControlName\", \"password\", \"type\", \"password\", \"required\", \"\", \"autocomplete\", \"current-password\"], [\"type\", \"submit\", 3, \"disabled\"]],\n      template: function NewsLoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function NewsLoginComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.onLogin();\n          });\n          i0.ɵɵelementStart(4, \"label\", 2);\n          i0.ɵɵtext(5, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(6, \"input\", 3);\n          i0.ɵɵtemplate(7, NewsLoginComponent_div_7_Template, 3, 2, \"div\", 4);\n          i0.ɵɵelementStart(8, \"label\", 5);\n          i0.ɵɵtext(9, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(10, \"input\", 6);\n          i0.ɵɵtemplate(11, NewsLoginComponent_div_11_Template, 2, 1, \"div\", 4);\n          i0.ɵɵelementStart(12, \"button\", 7);\n          i0.ɵɵtext(13, \"Login\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          let tmp_2_0;\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", (ctx.loginForm == null ? null : (tmp_1_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_1_0.invalid) && ((ctx.loginForm == null ? null : (tmp_1_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_1_0.touched) || (ctx.loginForm == null ? null : (tmp_1_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_1_0.dirty)));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", (ctx.loginForm == null ? null : (tmp_2_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_2_0.invalid) && ((ctx.loginForm == null ? null : (tmp_2_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_2_0.touched) || (ctx.loginForm == null ? null : (tmp_2_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_2_0.dirty)));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n        }\n      },\n      dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\".container[_ngcontent-%COMP%] {\\n  max-width: 400px;\\n  margin: 50px auto;\\n  padding: 20px;\\n  background-color: #f9f9f9;\\n  border-radius: 8px;\\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\n}\\n.container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  text-align: center;\\n  margin-bottom: 20px;\\n  font-size: 24px;\\n  color: #333;\\n}\\n.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n}\\n.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n  margin-bottom: 8px;\\n  font-weight: 600;\\n  color: #555;\\n}\\n.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   input[type=email][_ngcontent-%COMP%], .container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   input[type=password][_ngcontent-%COMP%] {\\n  padding: 10px;\\n  border: 1px solid #ccc;\\n  border-radius: 4px;\\n  font-size: 16px;\\n  margin-bottom: 10px;\\n  transition: border-color 0.3s ease;\\n}\\n.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   input[type=email][_ngcontent-%COMP%]:focus, .container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   input[type=password][_ngcontent-%COMP%]:focus {\\n  border-color: #5a9;\\n  outline: none;\\n}\\n.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   small[_ngcontent-%COMP%] {\\n  color: #e74c3c;\\n  font-size: 12px;\\n  margin-top: -8px;\\n  margin-bottom: 10px;\\n  display: block;\\n}\\n.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  padding: 10px;\\n  background-color: #5a9;\\n  color: white;\\n  font-weight: bold;\\n  border: none;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  transition: background-color 0.3s ease;\\n  margin-top: 10px;\\n}\\n.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n  background-color: #489;\\n}\\n.container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled {\\n  background-color: #ccc;\\n  cursor: not-allowed;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9uZXdzLWxvZ2luL25ld3MtbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBQTtFQUNBLGlCQUFBO0VBQ0EsYUFBQTtFQUNBLHlCQUFBO0VBQ0Esa0JBQUE7RUFDQSx3Q0FBQTtBQUNGO0FBQ0U7RUFDRSxrQkFBQTtFQUNBLG1CQUFBO0VBQ0EsZUFBQTtFQUNBLFdBQUE7QUFDSjtBQUVFO0VBQ0UsYUFBQTtFQUNBLHNCQUFBO0FBQUo7QUFFSTtFQUNFLGtCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxXQUFBO0FBQU47QUFHSTs7RUFFRSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxtQkFBQTtFQUNBLGtDQUFBO0FBRE47QUFHTTs7RUFDRSxrQkFBQTtFQUNBLGFBQUE7QUFBUjtBQUlJO0VBQ0UsY0FBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtFQUNBLG1CQUFBO0VBQ0EsY0FBQTtBQUZOO0FBS0k7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxZQUFBO0VBQ0EsaUJBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0VBQ0Esc0NBQUE7RUFDQSxnQkFBQTtBQUhOO0FBS007RUFDRSxzQkFBQTtBQUhSO0FBTU07RUFDRSxzQkFBQTtFQUNBLG1CQUFBO0FBSlIiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiA0MDBweDtcbiAgbWFyZ2luOiA1MHB4IGF1dG87XG4gIHBhZGRpbmc6IDIwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmOWY5Zjk7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgYm94LXNoYWRvdzogMCA0cHggOHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcblxuICBoMiB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIGNvbG9yOiAjMzMzO1xuICB9XG5cbiAgZm9ybSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXG4gICAgbGFiZWwge1xuICAgICAgbWFyZ2luLWJvdHRvbTogOHB4O1xuICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAgIGNvbG9yOiAjNTU1O1xuICAgIH1cblxuICAgIGlucHV0W3R5cGU9XCJlbWFpbFwiXSxcbiAgICBpbnB1dFt0eXBlPVwicGFzc3dvcmRcIl0ge1xuICAgICAgcGFkZGluZzogMTBweDtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XG4gICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgICAgdHJhbnNpdGlvbjogYm9yZGVyLWNvbG9yIDAuM3MgZWFzZTtcblxuICAgICAgJjpmb2N1cyB7XG4gICAgICAgIGJvcmRlci1jb2xvcjogIzVhOTtcbiAgICAgICAgb3V0bGluZTogbm9uZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBzbWFsbCB7XG4gICAgICBjb2xvcjogI2U3NGMzYztcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgIG1hcmdpbi10b3A6IC04cHg7XG4gICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxuXG4gICAgYnV0dG9uIHtcbiAgICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNWE5O1xuICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICBib3JkZXI6IG5vbmU7XG4gICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MgZWFzZTtcbiAgICAgIG1hcmdpbi10b3A6IDEwcHg7XG5cbiAgICAgICY6aG92ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDg5O1xuICAgICAgfVxuXG4gICAgICAmOmRpc2FibGVkIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2NjYztcbiAgICAgICAgY3Vyc29yOiBub3QtYWxsb3dlZDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;;ICM7DC,6BAA6D;IAAAA,kCAAkB;IAAAA,iBAAQ;;;;;IACvFA,6BAA0D;IAAAA,qCAAqB;IAAAA,iBAAQ;;;;;IAHzFA,2BACmH;IACjHA,6EAAuF;IACvFA,6EAAuF;IACzFA,iBAAM;;;;;;IAFIA,eAAmD;IAAnDA,8KAAmD;IACnDA,eAAgD;IAAhDA,2KAAgD;;;;;IAOxDA,6BAAgE;IAAAA,qCAAqB;IAAAA,iBAAQ;;;;;IAF/FA,2BAC4H;IAC1HA,8EAA6F;IAC/FA,iBAAM;;;;;IADIA,eAAsD;IAAtDA,iLAAsD;;;ADLpE,OAAM,MAAOC,kBAAkB;EAG7BC,YACUC,EAAe,EACfC,WAAwB,EACxBC,MAAc;IAFd,OAAE,GAAFF,EAAE;IACF,gBAAW,GAAXC,WAAW;IACX,WAAM,GAANC,MAAM;EAEhB;EAEAC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACJ,EAAE,CAACK,KAAK,CAAC;MAC7BC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACW,QAAQ,EAAEX,UAAU,CAACU,KAAK,CAAC,CAAC;MACpDE,QAAQ,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACW,QAAQ;KACnC,CAAC;EACJ;EAGAE,OAAO;IACL,IAAI,IAAI,CAACL,SAAS,CAACM,KAAK,EAAE;MACxB,IAAI,CAACT,WAAW,CAACU,KAAK,CAAC,IAAI,CAACP,SAAS,CAACQ,KAAK,CAAC,CAACC,SAAS,CACpD,MAAK;QACH,IAAI,CAACX,MAAM,CAACY,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MACjC,CAAC,EACAC,KAAK,IAAI;QACRC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACvC,CAAC,CACF;;EAEL;;;uBA7BWjB,kBAAkB;IAAA;EAAA;;;YAAlBA,kBAAkB;MAAAmB;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UCV/BxB,8BAAuB;UACjBA,qBAAK;UAAAA,iBAAK;UACdA,+BAAqD;UAAvBA;YAAA,OAAYyB,aAAS;UAAA,EAAC;UAClDzB,gCAAmB;UAAAA,qBAAK;UAAAA,iBAAQ;UAChCA,2BAAsF;UACtFA,mEAIM;UAENA,gCAAsB;UAAAA,wBAAQ;UAAAA,iBAAQ;UACtCA,4BAA0G;UAC1GA,qEAGM;UAENA,kCAAqD;UAAAA,sBAAK;UAAAA,iBAAS;;;;;UAhB/DA,eAAuB;UAAvBA,yCAAuB;UAIxBA,eAA8G;UAA9GA,uVAA8G;UAQ9GA,eAAuH;UAAvHA,gWAAuH;UAIpGA,eAA8B;UAA9BA,gDAA8B","names":["Validators","i0","NewsLoginComponent","constructor","fb","authService","router","ngOnInit","loginForm","group","email","required","password","onLogin","valid","login","value","subscribe","navigate","error","console","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/nataliiaodai/projects/newsAppFrontend/src/app/components/news-login/news-login.component.ts","/Users/nataliiaodai/projects/newsAppFrontend/src/app/components/news-login/news-login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-news-login',\n  templateUrl: './news-login.component.html',\n  styleUrls: ['./news-login.component.scss']\n})\nexport class NewsLoginComponent implements OnInit {\n  loginForm!: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n\n\n  onLogin(): void {\n    if (this.loginForm.valid) {\n      this.authService.login(this.loginForm.value).subscribe(\n        () => {\n          this.router.navigate(['/news']);\n        },\n        (error) => {\n          console.error('Login failed:', error);\n        }\n      );\n    }\n  }\n}\n","<div class=\"container\">\n  <h2>Login</h2>\n  <form [formGroup]=\"loginForm\" (ngSubmit)=\"onLogin()\">\n    <label for=\"email\">Email</label>\n    <input id=\"email\" formControlName=\"email\" type=\"email\" required autocomplete=\"email\"/>\n    <div\n      *ngIf=\"loginForm?.get('email')?.invalid && (loginForm?.get('email')?.touched || loginForm?.get('email')?.dirty)\">\n      <small *ngIf=\"loginForm?.get('email')?.errors?.['required']\">Email is required.</small>\n      <small *ngIf=\"loginForm?.get('email')?.errors?.['email']\">Invalid email format.</small>\n    </div>\n\n    <label for=\"password\">Password</label>\n    <input id=\"password\" formControlName=\"password\" type=\"password\" required autocomplete=\"current-password\"/>\n    <div\n      *ngIf=\"loginForm?.get('password')?.invalid && (loginForm?.get('password')?.touched || loginForm?.get('password')?.dirty)\">\n      <small *ngIf=\"loginForm?.get('password')?.errors?.['required']\">Password is required.</small>\n    </div>\n\n    <button type=\"submit\" [disabled]=\"loginForm.invalid\">Login</button>\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}