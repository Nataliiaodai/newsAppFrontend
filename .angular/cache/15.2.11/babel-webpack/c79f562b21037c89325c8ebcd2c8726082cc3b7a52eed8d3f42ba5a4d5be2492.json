{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class NewsService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://127.0.0.1:8000/api/news';\n  }\n  getNews(name) {\n    const url = name ? `${this.apiUrl}?name=${encodeURIComponent(name)}` : this.apiUrl;\n    return this.http.get(url);\n  }\n  getNewsById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  createNews(news) {\n    return this.http.post(this.apiUrl, news);\n  }\n  updateNews(newsData, id) {\n    return this.http.put(`${this.apiUrl}/${id}`, newsData);\n  }\n  deleteNews(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function NewsService_Factory(t) {\n      return new (t || NewsService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: NewsService,\n      factory: NewsService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,gCAAgC;EAGjD;EAEAC,OAAO,CAACC,IAAa;IACnB,MAAMC,GAAG,GAAGD,IAAI,GAAG,GAAG,IAAI,CAACE,MAAM,SAASC,kBAAkB,CAACH,IAAI,CAAC,EAAE,GAAG,IAAI,CAACE,MAAM;IAClF,OAAO,IAAI,CAACJ,IAAI,CAACM,GAAG,CAASH,GAAG,CAAC;EACnC;EAEAI,WAAW,CAACC,EAAmB;IAC7B,OAAO,IAAI,CAACR,IAAI,CAACM,GAAG,CAAO,GAAG,IAAI,CAACF,MAAM,IAAII,EAAE,EAAE,CAAC;EACpD;EAEAC,UAAU,CAACC,IAAU;IACnB,OAAO,IAAI,CAACV,IAAI,CAACW,IAAI,CAAO,IAAI,CAACP,MAAM,EAAEM,IAAI,CAAC;EAChD;EAEAE,UAAU,CAACC,QAAc,EAAEL,EAAmB;IAC5C,OAAO,IAAI,CAACR,IAAI,CAACc,GAAG,CAAO,GAAG,IAAI,CAACV,MAAM,IAAII,EAAE,EAAE,EAAEK,QAAQ,CAAC;EAC9D;EAEAE,UAAU,CAACP,EAAmB;IAC5B,OAAO,IAAI,CAACR,IAAI,CAACgB,MAAM,CAAO,GAAG,IAAI,CAACZ,MAAM,IAAII,EAAE,EAAE,CAAC;EACvD;;;uBAzBWV,WAAW;IAAA;EAAA;;;aAAXA,WAAW;MAAAmB,SAAXnB,WAAW;MAAAoB,YAFV;IAAM;EAAA","names":["NewsService","constructor","http","getNews","name","url","apiUrl","encodeURIComponent","get","getNewsById","id","createNews","news","post","updateNews","newsData","put","deleteNews","delete","factory","providedIn"],"sourceRoot":"","sources":["/Users/nataliiaodai/projects/newsAppFrontend/src/app/services/news.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { News } from \"../models/news.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NewsService {\n  private apiUrl = 'http://127.0.0.1:8000/api/news';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getNews(name?: string): Observable<News[]> {\n    const url = name ? `${this.apiUrl}?name=${encodeURIComponent(name)}` : this.apiUrl;\n    return this.http.get<News[]>(url);\n  }\n\n  getNewsById(id: number | string): Observable<News> {\n    return this.http.get<News>(`${this.apiUrl}/${id}`);\n  }\n\n  createNews(news: News): Observable<News> {\n    return this.http.post<News>(this.apiUrl, news);\n  }\n\n  updateNews(newsData: News, id: number | string): Observable<News> {\n    return this.http.put<News>(`${this.apiUrl}/${id}`, newsData);\n  }\n\n  deleteNews(id: number | string): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}